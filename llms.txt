# Sparkle

> Sparkle is an experimental TypeScript playground focused on modern web and mobile development technologies, featuring a monorepo with packages for UI components, utilities, mobile applications, theme management, and development tools built with React, Vite, Expo, and React Native.

This is a personal development playground that demonstrates modern monorepo architecture using pnpm workspaces and Turborepo. The repository includes a React Native mobile app (fro-jive), a comprehensive UI component library, a complete cross-platform theme management system, shared utilities, and extensive development tooling with Storybook for component documentation.

The project emphasizes TypeScript-first development, comprehensive testing, and maintainable code architecture. It serves as both a learning environment and a foundation for building production-ready applications using cutting-edge web and mobile technologies. The theme system provides design tokens, light/dark mode support, and seamless cross-platform theming capabilities.

## Documentation Site

- [Introduction to Sparkle](docs/src/content/docs/getting-started/introduction.md): Complete design system philosophy, goals, and core principles
- [Installation Guide](docs/src/content/docs/getting-started/installation.md): Step-by-step setup instructions for different use cases
- [Quick Start Guide](docs/src/content/docs/getting-started/quick-start.md): Build your first component with Sparkle in minutes
- [Project Structure Guide](docs/src/content/docs/getting-started/project-structure.md): Understanding the monorepo architecture and package organization
- [Contributing Guide](docs/src/content/docs/development/contributing.md): Guidelines for contributing to the Sparkle Design System

## Documentation

- [Main README](readme.md): Project overview and getting started guide
- [GitHub Copilot Instructions](.github/copilot-instructions.md): Comprehensive development guide for AI agents including architecture overview, workflows, and conventions

## Configuration

- [Package Configuration](package.json): Root package configuration with scripts and workspace setup
- [Workspace Configuration](pnpm-workspace.yaml): pnpm workspace package definitions
- [Build Configuration](turbo.json): Turborepo pipeline configuration for builds and tasks
- [TypeScript Configuration](tsconfig.json): Root TypeScript configuration and project references

## Specifications & Planning

- [Astro Starlight Documentation Plan](.ai/plan/feature-astro-starlight-docs-1.md): Implementation plan for comprehensive documentation site with automated component documentation
- [Theme Management Package Plan](.ai/plan/feature-theme-management-package-1.md): Architecture and implementation plan for cross-platform theme system
- [AI Development Prompts](.ai/docs/prompts.md): Cursor AI prompts and development assistance guidelines
- [Build Pipeline Infrastructure](.ai/plan/infrastructure-build-pipeline-1.md): Comprehensive build system architecture and optimization plans

## Packages

- [UI Component Library](packages/ui/README.md): Modern, accessible React component library with TypeScript and Tailwind CSS
- [Theme System](packages/theme/README.md): Cross-platform theme management with design tokens, dark/light modes, and Tailwind integration
- [Storybook Documentation](packages/storybook/README.md): Component documentation and development environment setup
- [fro-jive Mobile App](apps/fro-jive/package.json): Expo/React Native mobile application for jiving with Fro Bot

## Theme System

- [Theme Package Overview](packages/theme/README.md): Comprehensive theme management with design tokens and cross-platform support
- [Theme API Documentation](packages/theme/docs/API.md): Complete API reference for theme hooks, providers, and utilities
- [Theme Examples](packages/theme/docs/EXAMPLES.md): Practical examples of custom themes, animations, and platform-specific implementations
- [Theme Migration Guide](packages/theme/docs/MIGRATION.md): Step-by-step migration instructions and breaking changes
- [Theme Contributing Guide](packages/theme/docs/CONTRIBUTING.md): Development setup, testing, and contribution guidelines for theme package

## Development Tools

- [Error Testing Package](packages/error-testing/src/index.ts): Utilities for error handling experimentation and testing
- [Shared Types](packages/types/src/index.ts): Common TypeScript type definitions across packages
- [Utility Functions](packages/utils/src/index.ts): Shared utility functions and React helpers
- [Visual Regression Testing](packages/storybook/test/visual-regression/README.md): Automated visual testing setup for theme system and components
- [Changesets Configuration](.changeset/config.json): Version management and changelog generation workflow
- [Documentation Generation Scripts](docs/scripts/generate-docs.ts): Automated JSDoc extraction and Markdown generation for component documentation

## Optional

- [Legacy Documentation](docs-legacy/best-practices-for-sparkle-development.md): Previous development guidelines and standards (superseded by new docs site)
- [Legacy Project Guide](docs-legacy/project-guide.md): Previous comprehensive development guide (superseded by new docs site)
- [License](license.md): MIT license information
